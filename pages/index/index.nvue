<template>
	<view class="content" >
			<view style="height: 2px;">
				<uv-line-progress inactiveColor="#F8F8F8" v-if="showPercentage" height="2px" :showText="false" :percentage="percentage" activeColor="#3D9CFF"></uv-line-progress>
			</view>
		
		<cqy-web-view  ref="cqyWebView"  :hidden="hidden" :webUrl="webUrlData" @setWebUrl="onSetWebUrl"  @updateHtml="onUpdateHtml"
			style="width:750rpx;height: 560px;background-color: aqua;overflow-y: auto;"></cqy-web-view>
		
		<view v-if="!hidden" style="width:750rpx;height: 560px;background-color: aqua;overflow-y: auto;">
			asdasdasdasdas
		</view>
		
		
		<!-- 输入框和按钮 -->
		    <view class="input-container">
		      <input
		        v-model="inputUrl"
		        placeholder="请输入新的 URL"
		        class="input-box"
		      />
		      <button style="width: 100px; height: 40px;" @click="updateUrlWithInput" class="update-button">修改 URL</button>
		    </view>
		
		<view style="display: flex; flex-direction: row; align-items: center; flex-wrap: wrap;">
		<button style="width: 100px; height: 40px;" @click="updateUrl">修改url</button>
		<button style="width: 100px; height: 40px;" @click="showUrl">显示url</button>
		<button style="width: 100px; height: 40px;" @click="hideUrl">隐藏url</button>
		<button style="width: 100px; height: 40px;" @click="onback">后退</button>
		<button style="width: 100px; height: 40px;" @click="backOff">前进</button>
		<button style="width: 100px; height: 40px;" @click="def">销毁</button>
		<button style="width: 100px; height: 40px;" @click="reload">刷新</button>
		<button style="width: 100px; height: 40px;" @click="showView">显示</button>
		<button style="width: 100px; height: 40px;" @click="hideView">隐藏</button>
				

		</view>
	</view>
</template>

<script>
	export default {
		data() {
			return {
				percentage: 0,
				title: 'Hello',
				webUrlData: "",
				optionsWebUrlData: "",
				dataInfo:null,
				hidden:true,
				back:true,
				inputUrl: "", // 输入框的值
				destructionWebView: false,
				// 是否进度条
				showPercentage:true,
			}
		},
		onLoad(options) {
			// 接收普通参数并解码
			    const url = decodeURIComponent(options.url);
				this.optionsWebUrlData = url;
			
		},
		created() {
			this.startProgress();
		},
		mounted(){
			console.log("mounted")
			
		},
		beforeDestroy() {
			this.$refs["cqyWebView"].destructionWebView();
		},
		methods: {
			
			reload(){
				this.$refs["cqyWebView"].reload();
			},
			getRandomNumber() {
			    return Math.floor(Math.random() * (30 - 20 + 1)) + 20;
			  },
			  startProgress() {
			    const targetPercentage = 90; // 目标进度
			    const duration = 3000; // 3秒
			    const intervalTime = 400; // 每1秒更新一次
			    const steps = duration / intervalTime; // 总步数
			    let currentStep = 0;
			
			    const interval = setInterval(() => {
					console.log("startProgress",this.percentage)
					if(this.percentage == 100){
						clearInterval(interval); // 停止定时器
						return;
					}
			      if (currentStep < steps) {
			        // 每次增加一个随机数，但不超过目标值
			        this.percentage = Math.min(
			          this.percentage + this.getRandomNumber(),
			          targetPercentage
			        );
			        currentStep++;
			      } else {
			        clearInterval(interval); // 停止定时器
			      }
			    }, intervalTime);
			  },
			def(){
				this.$refs["cqyWebView"].destructionWebView();
			},
			// 后退
			onback(data){
				this.$refs["cqyWebView"].back();
			},
			// 前进
			backOff(data){
				this.$refs["cqyWebView"].forward();
			},
			// 通过输入框更新 URL
			    updateUrlWithInput() {
			      if (this.inputUrl) {
			        this.webUrlData = this.inputUrl; // 更新 WebView 的 URL
			        this.inputUrl = ""; // 清空输入框
			      } else {
			        uni.showToast({
			          title: "请输入有效的 URL",
			          icon: "none",
			        });
			      }
			    },
			onSetWebUrl(){
				this.webUrlData= this.optionsWebUrlData;
				
			},
			showUrl(){
				// this.$refs["cqyWebView"].showWebView();
				this.hidden = true;
			},
			hideUrl(){
				// this.$refs["cqyWebView"].hideWebView();
				this.hidden = false;
			},
			onButtonClick(data) {
				
			},
			onUpdateHtml(data) {
				// if(this.dataInfo){
				// 	return;
				// }
				this.percentage = 100;
				
				setTimeout(()=>{
					this.showPercentage = false;
				},1000)
				
				let that = this;
				// 访问 detail.cqyData
				const cqyData = data.detail.cqyData;
				let dataInfo = JSON.parse(cqyData)
				this.dataInfo = dataInfo;
			
				console.log("=========================================")
				console.log("dataInfo="+that.dataInfo.title)
				console.log("=========================================")
				uni.showToast({
					title: that.dataInfo.title
				})
			},
			updateUrl() {
				this.webUrlData = "https://www.zhihu.com/question/38560404/answer/37836302436";
			},
			// 调用组件内的方法
			doSth() {
				
			},
			computedWidth(type) {
							this.percentage = 100;
			}
		}
	}
</script>

<style>

</style>